set NodeName @NodeName@
set ServerName @ServerName@
set AppName @WpsAppName@
set LibraryNames {WpcpRuntimeLib WpcpAuthorLib}

set classpaths [list [list classPath {@WpsInstallLocation@/wpcp/v5.0/runtime/lib}] [list classPath {@WpsInstallLocation@/wpcp/v5.0/author/lib}]]

#--------------------------------------------------------------
# Proc to create a Library Reference in a Classloader
#--------------------------------------------------------------
proc createLibRef {ClassLoader LibraryRef LibraryName} {
	global AdminConfig
	set LocalFlagErr false
	set LibRef ""
	set FlagExist "False"

		#### Check if its already there ###################
		if {$LibraryRef != ""} {
			set TmpList [split [string trim [string trim [string trim $LibraryRef "{"] "}"] ] ")"]
			foreach Tmp $TmpList {
				set Tmp [string trim $Tmp " "]
				append Tmp ")"
				if { [string length $Tmp] > 1} {
					lappend LibRef $Tmp
				}
			}
			foreach TmpLibRef $LibRef {
				if {[catch {$AdminConfig showAttribute $TmpLibRef libraryName} TmpLibRefName]} {
					puts stdout $TmpLibRefName
					puts stdout "ERROR: In '/CLassloader:/'."
					puts stdout "This is not a valid Library Reference."
					puts stdout $TmpLibRef
					set LocalFlagErr true
				} else {
					if {[string compare $TmpLibRefName $LibraryName] == 0} {
						set FlagExist "True"
						break
					}
				}
			}
		}

		if {$FlagExist == "True"} {
			puts stdout "Application Classloader LibraryRef:$LibraryName' already there, no Action taken"
		} else {
			##### Create Application Classloader LibraryReference
			set LibraryNameList [list libraryName $LibraryName]
			set attrs [list $LibraryNameList]
			set LibraryRef [$AdminConfig create LibraryRef $ClassLoader $attrs]
			if {$LibraryRef == ""} {
				puts stdout "ERROR: Application Classloader LibraryRef $LibraryName could not be created."
				set LocalFlagErr true
			} else {
				#### Check for success ###################
				set TmpList [split [string trim [string trim [string trim $LibraryRef "{"] "}"] ] ")"]
				foreach Tmp $TmpList {
					set Tmp [string trim $Tmp " "]
					append Tmp ")"
					if { [string length $Tmp] > 1} {
						lappend LibRef $Tmp
					}
				}
				set FlagExist "False"
				foreach TmpLibRef $LibRef {
					if {[catch {$AdminConfig showAttribute $TmpLibRef libraryName} TmpLibRefName]} {
						puts stdout $TmpLibRefName
						puts stdout "ERROR: In '/CLassloader:/'."
						puts stdout "This is not a valid Library Reference."
						puts stdout $TmpLibRef
						set LocalFlagErr true
					} else {
						if {[string compare $TmpLibRefName $LibraryName] == 0} {
							set FlagExist "True"
							break
						}
					}
				}
			}

			if {$FlagExist == "True"} {
				puts stdout "LibraryRef $LibraryName successfully created."
				set LocalFlagErr false
			} else {
				puts stdout "ERROR: LibraryRef $LibraryName could not be created."
				set LocalFlagErr true
			}
		}
	
	return $LocalFlagErr
}



#--------------------------------------------------------------
# Main
#--------------------------------------------------------------

set NodeId [$AdminConfig getid /Node:$NodeName/]
set ServerId [$AdminConfig getid /Server:$ServerName/]

set cpindex 0

foreach LibraryName ${LibraryNames} {
   ##### Create Library
   set cp [lindex $classpaths $cpindex]
   incr cpindex

   set LibraryId [$AdminConfig getid /Node:$NodeName/Library:$LibraryName/]
   if {$LibraryId != ""} {
       puts stdout "/Node:$NodeName/Library:$LibraryName/ already exists, no Action taken"
   } else {
   	set NameList [list name $LibraryName]
   	set attrs [list $cp $NameList]
   	set Library [$AdminConfig create Library $NodeId $attrs]
   	if {$Library == ""} {
   		puts stdout "ERROR: /Node:$NodeName/Library:$LibraryName/ could not be created."
   		exit 1
   	} else {	
   		puts stdout "Library $LibraryName successfully created and modified."
   	}
   }



   ##### Get Application Classloader
   set DeploymentId [$AdminConfig getid /Deployment:$AppName/]
   if {$DeploymentId == ""} {
   	puts stdout "'/Deployment:$AppName/' does not exist."
       exit 1
   }
   set DeployedObject [$AdminConfig showAttribute $DeploymentId deployedObject]
   if {$DeployedObject == ""} {
   	puts stdout "ERROR: '/Deployment:$AppName/DeployedObject:/' does not exist."
       exit 1
   }
   set ClassLoader [$AdminConfig showAttribute $DeployedObject classloader]
   if {$ClassLoader == ""} {
   	puts stdout "ERROR: '/Deployment:$AppName/DeployedObject:/Classloader:/' does not exist."
   	set FlagErr true
       exit 1
   }
   			
               
   ##### Create Application Classloader LibraryReference
   puts "Start to create /Deployment:$AppName/DeployedObject:/Classloader:/LibraryRef:$LibraryName/"
   set LibraryRef [$AdminConfig showAttribute $ClassLoader libraries]
   if {[createLibRef $ClassLoader $LibraryRef $LibraryName] == "true"} {
   	exit 1
   }
}

puts stdout "Shared Libraries and Shared Library Reference(s) for '$LibraryNames' successfully created or already there."
puts " "
$AdminConfig save

