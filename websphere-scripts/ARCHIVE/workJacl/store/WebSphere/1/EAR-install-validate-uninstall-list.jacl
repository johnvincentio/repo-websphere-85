# Author: Barry Searle
#
# (C) Copyright IBM Corp. 2004 - All Rights Reserved.
# DISCLAIMER:
# The following source code is sample code created by IBM Corporation.
# This sample code is not part of any standard IBM product and is provided
# to you solely for the purpose of assisting you in the development of your
# applications. The code is provided 'AS IS', without warranty or condition
# of any kind. IBM shall not be liable for any damages arising out of your
# use of the sample code, even if IBM has been advised of the possibility of
# such damages.
#
# Change History:
# 1.1 (17nov2004) initial shipped version
#


proc validateEAR { appPath } {
	source Definitions.jacl
	log $INFO_ "validateEAR: FUTURE: installed EAR-FILE validation"
}

proc installEAR { action appPath appName clusterName nodeName serverName } {
	source Definitions.jacl
	set update ""
	if { $action=="update" } {
		set update "-update -appname $appName"
	}
	if { $serverName!="" && $nodeName!="" } {
		highlight $MAJOR_ "installEAR: $action node=$nodeName server=$serverName appName=$appName appPath=$appPath ..."
		set temp [catch { set  installed [$AdminApp install $appPath "$update -verbose -node $nodeName -server $serverName -distributeApp -nodeployejb"] }]
		if { $temp != 0 } {
			set msg "Exception installing EAR $appPath to $nodeName $serverName"
			fail $msg
		}
	} elseif { $clusterName!="" } {
		highlight $MAJOR_ "installEAR: $action cluster=$clusterName appName=$appName appPath=$appPath ..."
		set temp [catch { set  installed [$AdminApp install $appPath "$update -verbose -cluster $clusterName               -distributeApp -nodeployejb"] }]
		if { $temp != 0 } {
			set msg "Exception installing EAR $appPath to $clusterName"
			fail $msg
		}
	} else {
		set msg "ERROR: installEAR: no serverName/nodeName nor clusterName specified"
		fail $msg
	}
	if { [llength $installed] > 0 } {
		log $INFO_ $installed
	}
	set appExists [checkIfAppExists $appName]
	if { $appExists } {
	} else {
			fail "failed to installEAR application=$appName"
	}
	log $VERBOSE_ "InstallEAR: DONE."
}

proc uninstallEAR { appName } {
	source Definitions.jacl
	log $MAJOR_ "UninstallEAR: $appName..."
	set  uninstalled [$AdminApp uninstall $appName]
	log $INFO_ $uninstalled
	set appExists [checkIfAppExists $appName]
	if { $appExists } {
			fail "failed to uninstallEAR application=$appName"
	}
	log $VERBOSE_ "UninstallEAR: DONE."
}
