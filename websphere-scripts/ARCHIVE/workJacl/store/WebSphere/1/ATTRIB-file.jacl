# Author: Barry Searle
#
# (C) Copyright IBM Corp. 2004 - All Rights Reserved.
# DISCLAIMER:
# The following source code is sample code created by IBM Corporation.
# This sample code is not part of any standard IBM product and is provided
# to you solely for the purpose of assisting you in the development of your
# applications. The code is provided 'AS IS', without warranty or condition
# of any kind. IBM shall not be liable for any damages arising out of your
# use of the sample code, even if IBM has been advised of the possibility of
# such damages.
#
# Change History:
# 1.1 (17nov2004) initial shipped version
#


proc PreValidateSettingsFile { appName depType distDir  } {
	set ext ".settings"
	set  settingsFileName $distDir/$appName$depType$ext

	if { [file isfile $settingsFileName]==0 } {
		set msg "PreValidateSettingsFile: ERROR: is not a file, settingsFileName=$settingsFileName"
		fail $msg
	}
	if { [file exists $settingsFileName]==0 } {
		set msg "PreValidateSettingsFile: ERROR: does not exist, settingsFileName=$settingsFileName"
		fail $msg
	}
	if { [file readable $settingsFileName]==0 } {
		set msg "PreValidateSettingsFile: ERROR: cannot read settingsFileName=$settingsFileName"
		fail $msg
	}
}

proc processSettingsFile { appName depType distDir } {
	source Definitions.jacl
	PreValidateSettingsFile $appName $depType $distDir 
	set ext ".settings"
	set  settingsFileName $distDir/$appName$depType$ext
	log $INFO_ ""
	log $MAJOR_ "processSettingsFile: settingsFileName=$settingsFileName"
	set objectType "?"
	set objectName "?"
	set showSetResult false
	set appName "?"
		  
	#log $DEBUG_ "processSettingsFile: opening file=$settingsFileName"
	set temp [catch {open $settingsFileName r} fd]
	if { $temp == 0 } {
		set more true
	} else { 
		set more false
		set msg "ERROR: processSettingsFile: attempting to read settingsFileName=$settingsFileName"
		fail $msg
		exit -1
	}
	while {$more} {
		if { [eof $fd] } {
			set more false
		}
		set line [gets $fd]			
		set line [string trim $line]
		#log $DEBUG_ "processSettingsFile: line=$line<<<<"
		set comment [string first "#" $line]
		if { $comment==0 } {
			#log $DEBUG_ "processSettingsFile: COMMENT: $line"
			set line ""
		}
		set i [string first "=" $line]
		if { $i>0 } {
			set attrib [string range $line 0 [expr $i-1] ]
			set value  [string range $line [expr $i+1] end]
			if { $attrib == "ApplicationName" } {
				set objectName $value
				set objectType "Application"
				log $VERBOSE_ "processSettingsFile: objectType=$objectType objectName=$objectName"
				set appName $value
			} elseif { $attrib == "WebModuleName" } {
				set objectName $value
				set objectType "WebModule"
				log $VERBOSE_ "processSettingsFile: objectType=$objectType objectName=$objectName"
			} elseif { $attrib == "showSetResult"  } {
				if { $value == "true" || $value == "TRUE" ||$value == "1" } { 
					set value 1
				} else { set value 0 }
				set showSetResult $value
				log $VERBOSE_ "processSettingsFile: showSetResult=$showSetResult"
			} else {
				log $VERBOSE_ "processSettingsFile: attribute=$attrib  value=$value  objectType=$objectType  objectName=$objectName  showSetResult=$showSetResult"
				setAttribute $objectName $objectType $attrib $value $appName $showSetResult
			}
		} else {
			if { "" == $line } {
				#log $DEBUG_ "BLANK line"
			} else {
				set msg "processSettingsFile: ERROR(MISSING'='):  line=$line   propertyfile=$settingsFileName "
				log $ERROR_ $msg
				fail $msg
			}
		}
	}
	log $VERBOSE_ "processSettingsFile: DONE."
	close $fd
}
