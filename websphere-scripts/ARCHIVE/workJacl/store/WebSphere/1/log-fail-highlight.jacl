# Author: Barry Searle
#
# (C) Copyright IBM Corp. 2004,2005 - All Rights Reserved.
# DISCLAIMER:
# The following source code is sample code created by IBM Corporation.
# This sample code is not part of any standard IBM product and is provided
# to you solely for the purpose of assisting you in the development of your
# applications. The code is provided 'AS IS', without warranty or condition
# of any kind. IBM shall not be liable for any damages arising out of your
# use of the sample code, even if IBM has been advised of the possibility of
# such damages.
#
# Change History:
# 1.3 (22apr2005) moved proc getEnvar into new getEnvars.jacl
# 1.2 (14jan2005) added proc getEnvar
# 1.1 (17nov2004) initial shipped version
#


set errors	""
set warnings	""
set DEBUG_	5
set VERBOSE_	4
set INFO_	3
set MAJOR_  	2
set WARNING_	1
set ERROR_	0

proc checkErrorsWarnings {level message} {
	source Definitions.jacl
	global errors
	global warnings

	if {($level == $ERROR_)} {
		set message "ERROR: $message"
		lappend errors $message
	} elseif {($level == $WARNING_)} {
		set message "WARNING: $message"
		lappend warnings $message
	}
	return $message 
}

proc log { level message } {
	source Definitions.jacl
	global logLevel

	if {($level <= $logLevel)} {
	  if {($logLevel != $DEBUG_)} {
		if {($level == $ERROR_)} {
			highlight $ERROR_ $message
		} elseif {($level == $WARNING_)} {
			lowlight $WARNING_ $message
		} else {
			puts "$message"
		}
	  } else {
		checkErrorsWarnings $level $message
		if {($level == $ERROR_)} {
			puts ".E ###ERROR### $message"
		} elseif {($level == $WARNING_)} {
			puts "..W ###WARNING### $message"
		} elseif {($level == $MAJOR_)} {
			puts "...M $message"
		} elseif {($level == $INFO_)} {
			puts "....I $message"
		} elseif {($level == $VERBOSE_)} {
			puts ".....V $message"
		} elseif {($level == $DEBUG_)} {
			puts "......D $message"
		} else {
			puts "???????? $message"
		}
	  }
	}
}

proc fail { msg } {
	source Definitions.jacl
	global failOnError
	global errors
	set msg "FAILURE: $msg"
	debugHighlight $ERROR_ $msg
	if { $failOnError } {
		exit
	} 
}

proc debugHighlight { level message } {
	global logLevel
	set message [checkErrorsWarnings $level $message]
	if { ($level <= $logLevel) } {
		##puts ""
		puts "#######################################################################"
		puts "$message"
		puts "#######################################################################"
		##puts ""
	}
}

proc highlight { level message } {
	global logLevel
	set message [checkErrorsWarnings $level $message]
	if { ($level <= $logLevel) } {
		puts "======================================================================="
		puts "$message"
		puts "======================================================================="
	}
}

proc lowlight { level message } {
	global logLevel
	set message [checkErrorsWarnings $level $message]
	if { ($level <= $logLevel) } {
		puts "-----------------------------------------------------------------------"
		puts "$message"
		puts "-----------------------------------------------------------------------"
	}
}
