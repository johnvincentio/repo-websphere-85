# Author: Barry Searle
#
# (C) Copyright IBM Corp. 2004,2005 - All Rights Reserved.
# DISCLAIMER:
# The following source code is sample code created by IBM Corporation.
# This sample code is not part of any standard IBM product and is provided
# to you solely for the purpose of assisting you in the development of your
# applications. The code is provided 'AS IS', without warranty or condition
# of any kind. IBM shall not be liable for any damages arising out of your
# use of the sample code, even if IBM has been advised of the possibility of
# such damages.
#
# Change History:
# 1.3 (22apr2005) API: added "appPath" as setTargets parameter
# 1.3 (22apr2005) added "update" code into proc "installAndConfigureApps"
# 1.2 (14jan2005) removed duplicated appends of testURLs and testResponses
# 1.1 (17nov2004) initial shipped version
#


proc installAndConfigureApps { action depType distDir wasRoot appNames } {
	source Definitions.jacl
	global testRULs
	global testResponses
	log $INFO_ ""
	log $MAJOR_ "installAndConfigureApps: appNames=$appNames ..."

	listApplications
	
	################ INSTALL (or UPDATE) AND CONFIGURE ##############
	foreach appName $appNames {
	
		################ READ TARGETS ##############
		set appTargets		[readTargetsFile $appName $depType $distDir]
		set appNodeServerPairs	[lindex $appTargets 0]
		set appClusters		[lindex $appTargets 1]
		set appTestURLs		[lindex $appTargets 2]
		set appTestResponses	[lindex $appTargets 3]
		log $DEBUG_ "installAndConfigureApps: appNodeServerPairs=$appNodeServerPairs"
		log $DEBUG_ "installAndConfigureApps: appClusters=$appClusters"
		log $DEBUG_ "installAndConfigureApps: appTestURLs=$appTestURLs"
		log $DEBUG_ "installAndConfigureApps: appTestResponses=$appTestResponses"
	
		log $MAJOR_ "installAndConfigureApps: appName=$appName"
		set  ext ".ear"
		set  appPath $distDir/$appName$ext

		################ VALIDATE EAR ##############
		validateEAR $appPath

		################ INSTALL ##############
		set appNodeServerPair [lindex $appNodeServerPairs 0]
		set nodeName	[lindex $appNodeServerPair 0]
		set serverName	[lindex $appNodeServerPair 1]
		set clusterName	[lindex $appClusters 0]
		if { $action=="install" } {
			set appExists [checkIfAppExists $appName]
			if { $appExists } {
				set msg "application=$appName EXISTS, CANNOT install with same name"
				fail $msg
				highlight $ERROR_ "application=$appName EXISTS, will process SETTINGS and TARGETS"
				#highlight $WARNING_ "application=$appName EXISTS, will uninstall before install"
				#uninstall	$action $depType $distDir $wasRoot
			} else {
				installEAR		$action $appPath $appName $clusterName $nodeName $serverName
			}
		} elseif { $action=="update" } {
			set appExists [checkIfAppExists $appName]
			if { $appExists } {
			} else {
				set msg "application=$appName DOES NOT EXIST, will INSTALL instead of UPDTAE"
				warn $msg
			}
			installEAR		install $appPath $appName $clusterName $nodeName $serverName
		}
		
		################ CONFIG SETTINGS ##############
		processSettingsFile	$appName $depType $distDir

		################ CONFIG TARGETS ##############
		setTargets		$appName $appClusters $appNodeServerPairs $appPath
		
		################ VALIDATE INSTALLED APPLICATION ##############
		validateApplication	$appName
	}
	listApplications
	highlight $MAJOR_ "installAndConfigureApps DONE. (ready to distribute to nodes/servers)"
}
