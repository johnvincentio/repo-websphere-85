# Author: Barry Searle
#
# (C) Copyright IBM Corp. 2004,2005 - All Rights Reserved.
# DISCLAIMER:
# The following source code is sample code created by IBM Corporation.
# This sample code is not part of any standard IBM product and is provided
# to you solely for the purpose of assisting you in the development of your
# applications. The code is provided 'AS IS', without warranty or condition
# of any kind. IBM shall not be liable for any damages arising out of your
# use of the sample code, even if IBM has been advised of the possibility of
# such damages.
#
# Change History:
# 1.2 (14jan2005) fixed multiple EARs (start/stop apps on servers using $appsNodesServers per app)
# 1.1 (17nov2004) initial shipped version
#


proc calculateAffectedNodes { action depType distDir wasRoot appNames } {
	source Definitions.jacl
	global nodeServerPairs
	global clusters
	global uniqueNodesContainedServers
	global nodesAutosyncs
	global testURLs
	global testResponses
	global appsNodesServers 
	set appsNodesServers ""
	set nodeServerPairs ""
	set uniqueNodesContainedServers ""
	set nodesAutosyncs ""
	set testURLs ""
	set testResponses ""
	log $VERBOSE_ "calculateAffectedNodes appNames=$appNames ..."
	highlight $DEBUG_ "calculateAffectedNodes appNames=$appNames ..."
	
	############### FIND NODES/SERVERS ####################
	if { [llength $appNames ]==0 } {
		fail "calculateAffectedNodes: No appNames (*.ear) in distDir $distDir"
	} 
	foreach appName $appNames {
	
		################ READ TARGETS ##############
		set appTargets			[readTargetsFile $appName $depType $distDir]
		set appNodeServerPairs	[lindex $appTargets 0]
		set tmpNodeServerPairs	""
		set appClusters			[lindex $appTargets 1]
		set appTestURLs			[lindex $appTargets 2]
		set appTestResponses	[lindex $appTargets 3]
		log $DEBUG_ "calculateAffectedNodes: appNodeServerPairs=$appNodeServerPairs"
		log $DEBUG_ "calculateAffectedNodes: appClusters=$appClusters"
	        if { $action!="uninstall" } {
			log $DEBUG_ "calculateAffectedNodes: appTestURLs=$appTestURLs"
			log $DEBUG_ "calculateAffectedNodes: appTestResponses=$appTestResponses"
		}

		################## PRE-VALIDATE CLUSTERS ####################
		foreach cluster $appClusters {
			PreValidateCluster $cluster
		}

		################## APPEND TOTAL NODES/SERVERS/TESTS ############
		foreach appNodeServerPair $appNodeServerPairs {
			#log $DEBUG_ "calculateAffectedNodes:  appNodeServerPair=$appNodeServerPair"
			lappend nodeServerPairs $appNodeServerPair
			lappend tmpNodeServerPairs $appNodeServerPair
		}
		set clusterNodeServerPairs [getNodeServerPairs $appClusters]
		foreach clusterNodeServerPair $clusterNodeServerPairs {
			#log $DEBUG_ "calculateAffectedNodes: clusterNodeServerPair=$clusterNodeServerPair"
			lappend nodeServerPairs $clusterNodeServerPair
			lappend tmpNodeServerPairs $clusterNodeServerPair
		}

		lappend clusters		$appClusters

		foreach url $appTestURLs {
			log $DEBUG_ "calculateAffectedNodes: url=$url"
			lappend testURLs 	$url
		}
		foreach response $appTestResponses {
			log $DEBUG_ "calculateAffectedNodes: response=$response"
			lappend testResponses	$response
		}

		lappend appsNodesServers $appName
		lappend appsNodesServers $tmpNodeServerPairs
	}
        if { $action!="uninstall" } {
		log $VERBOSE_ "calculateAffectedNodes: RESULT: testURLs=$testURLs"
		log $VERBOSE_ "calculateAffectedNodes: RESULT: testResponses=$testResponses"
	}
	log $VERBOSE_ "calculateAffectedNodes: RESULT: appsNodesServers=$appsNodesServers"
	log $VERBOSE_ "calculateAffectedNodes: RESULT: nodeServerPairs=$nodeServerPairs"

	################## UNIQUE NODES (AND THEIR UNIQUE SERVERS) ############
	if { [llength $nodeServerPairs ]==0 } {
		fail "calculateAffectedNodes: No node/server/cluster (Targets) specified"
	} 
	set uniqueNodesContainedServers [determineUniqueNodesContainedServers $nodeServerPairs]
	log $INFO_ "calculateAffectedNodes: RESULT: uniqueNodesContainedServers=$uniqueNodesContainedServers"

	highlight $MAJOR_ "calculateAffectedNodes DONE."
}
