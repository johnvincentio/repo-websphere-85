# Author: Barry Searle
#
# (C) Copyright IBM Corp. 2004,2005 - All Rights Reserved.
# DISCLAIMER:
# The following source code is sample code created by IBM Corporation.
# This sample code is not part of any standard IBM product and is provided
# to you solely for the purpose of assisting you in the development of your
# applications. The code is provided 'AS IS', without warranty or condition
# of any kind. IBM shall not be liable for any damages arising out of your
# use of the sample code, even if IBM has been advised of the possibility of
# such damages.
#
# Change History:
# 1.1 (17nov2004) initial shipped version
#


proc saveAndDisableAutosync { action nodesContainedServers } {
	source Definitions.jacl
	if { ($action == "update") } {
	} else {
		fail "saveAndDisableAutosync: should never be called for action=$action (only for 'install')"
	}
	
	log $INFO_  ""
	log $MAJOR_ "saveAndDisableAutosync of affectedNodes begin ..."
	set savedNodesAutosyncs [list]
	foreach nodeContainedServer $nodesContainedServers {
		set nodeName [lindex $nodeContainedServer 0]
		set nodeAgent [$AdminConfig getid /Node:$nodeName/Server:nodeagent/]  
		set syncServ [$AdminConfig list ConfigSynchronizationService $nodeAgent]  
		set syncEnabled [$AdminConfig showAttribute $syncServ autoSynchEnabled]
		set synchOnServerStartup [$AdminConfig showAttribute $syncServ synchOnServerStartup]
		log $INFO_ "saveAndDisableAutosync: nodeName=$nodeName syncEnabled=$syncEnabled synchOnServerStartup=$synchOnServerStartup"
		if {$syncEnabled} {
			log $MAJOR_ "saveAndDisableAutosync: temporarily setting AutoSyncEnabled FALSE for node=$nodeName"
			$AdminConfig modify $syncServ {{autoSynchEnabled false}}
		}
		if {$synchOnServerStartup} {
			log $MAJOR_ "saveAndDisableAutosync: temporarily setting SynchOnServerStartup FALSE for node=$nodeName"
			$AdminConfig modify $syncServ {{synchOnServerStartup false}}
		}
		
		set savedNodeAutosync [list $nodeName $syncEnabled $synchOnServerStartup ]
		log $DEBUG_ "saveAndDisableAutosync: nodeName=$nodeName savedNodeAutosync=$savedNodeAutosync"
		lappend savedNodesAutosyncs $savedNodeAutosync
	}
	configSave
	log $DEBUG_ "saveAndDisableAutosync: returning node savedNodesAutosyncs=$savedNodesAutosyncs"
	highlight $MAJOR_ "saveAndDisableAutosync of affectedNodes DONE."
	return $savedNodesAutosyncs
}

proc restoreAutosync { action savedNodesAutosyncs } {
	source Definitions.jacl
	if { ($action == "update") } {
	} else {
		fail "saveAndDisableAutosync: should never be called for action=$action (only for 'update')"
	}
	log $MAJOR_ "restoreAutosync of affectedNodes begin ..."

	log $DEBUG_ "restoreAutosync: savedNodesAutosyncs=$savedNodesAutosyncs"
	foreach savedNodeAutosync $savedNodesAutosyncs {
		log $VERBOSE_ "restoreAutosync: savedNodeAutosync=$savedNodeAutosync"
		set nodeName [lindex $savedNodeAutosync 0]
		set nodeAgent [$AdminConfig getid /Node:$nodeName/Server:nodeagent/]  
		set syncServ [$AdminConfig list ConfigSynchronizationService $nodeAgent]  
		set syncEnabled [lindex $savedNodeAutosync 1]
		set synchOnServerStartup [lindex $savedNodeAutosync 2]
		log $INFO_ "restoreAutosync: nodeName=$nodeName syncEnabled=$syncEnabled synchOnServerStartup=$synchOnServerStartup"
		if {$syncEnabled} {
			log $MAJOR_ "saveAndDisableAutosync: restoring AutoSyncEnabled      TRUE for node=$nodeName"
			$AdminConfig modify $syncServ {{autoSynchEnabled true}}
		} else {
			log $WARNING_ "saveAndDisableAutosync: restoring AutoSyncEnabled      FALSE for node=$nodeName"
			##debugHighlight $WARNING_ "saveAndDisableAutosync: restoring AutoSyncEnabled FALSE for node=$nodeName"
		}
		if {$synchOnServerStartup} {
			log $MAJOR_ "saveAndDisableAutosync: restoring SynchOnServerStartup TRUE for node=$nodeName"
			$AdminConfig modify $syncServ {{synchOnServerStartup true}}
		} else {
			log $WARNING_ "saveAndDisableAutosync: restoring SynchOnServerStartup FALSE for node=$nodeName"
			##debugHighlight $WARNING_ "saveAndDisableAutosync: restoring SynchOnServerStartup FALSE for node=$nodeName"
		}
	}
	configSave
	highlight $MAJOR_ "restoreAutosync of affectedNodes DONE."
}

proc configSave {} {
	source Definitions.jacl
	log $MAJOR_ "configSave: ..."
	set  saved [$AdminConfig save]
	if { [llength $saved] > 0 } {
		log $INFO_ $saved
	}
	log $VERBOSE_ "configSave: DONE."
}
