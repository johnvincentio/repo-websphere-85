
#--------------------------------------------------------------------
# Handle server class loading policy; acceptable values are SINGLE, MULTIPLE
#--------------------------------------------------------------------

proc JVsetAppServerClassLoadingPolicy {nodeName serverName myParam} {
	global AdminConfig M_OK M_ERROR;

	JVputTrace ">>> JVsetAppServerClassLoadingPolicy; Node=$nodeName Server=$serverName Param=$myParam";
	if {[catch {$AdminConfig getid /Node:$nodeName/Server:$serverName} ServerId]} {
		JVputError "Cannot get Server $serverName; $ServerId";
		return $M_ERROR;
	}
	if {$ServerId == ""} {
		JVputError "ERROR: Server $serverName does not exist, no Action taken";
		return $M_ERROR;
	}
	if {[catch {$AdminConfig getid /Server:$serverName/ApplicationServer:/} ApplicationServerId]} {
		JVputError "Cannot get ApplicationServer $serverName; $ApplicationServerId";
		return $M_ERROR;
	}
	if {$ApplicationServerId == ""} {
		JVputError "ERROR: /Server:$serverName/ApplicationServer:/ does not exist";
		return $M_ERROR;
	}
	if {[llength $ApplicationServerId] != 1} {
		JVputError "ERROR: more then one /Server:$serverName/ApplicationServer:/";
		return $M_ERROR;
	}
	set AppClassLoaderPolicy $myParam;
	set AppClassLoaderPolicyAttr [list applicationClassLoaderPolicy $AppClassLoaderPolicy];
	set attrs [list $AppClassLoaderPolicyAttr];
   
	set TmpAppClassLoaderPolicyAttr [$AdminConfig show $ApplicationServerId applicationClassLoaderPolicy];
	JVputInfo "Modify ApplicationServer attributes /Server:$serverName/ApplicationServer:/";
    JVputInfo "Old: $TmpAppClassLoaderPolicyAttr";

	if {[lindex $TmpAppClassLoaderPolicyAttr 0] != $AppClassLoaderPolicyAttr} {
		JVputInfo "Needs to be changed to:"
        $AdminConfig modify $ApplicationServerId $attrs;

		set TmpAppClassLoaderPolicyAttr [$AdminConfig show $ApplicationServerId applicationClassLoaderPolicy];
        JVputInfo "New: $TmpAppClassLoaderPolicyAttr";
        if {[lindex $TmpAppClassLoaderPolicyAttr 0] != $AppClassLoaderPolicyAttr} {
            JVputError "ERROR: ApplicationServer Attibutes could not be modified.";
            return $M_ERROR;
        } else { 
            JVputInfo "ApplicationServer Attributes successfully modified.";
            $AdminConfig save;
        }
    } else {
        JVputInfo "ApplicationServer Attributes are OK, no action taken";
    }
	JVputTrace "<<< JVsetAppServerClassLoadingPolicy";
	return $M_OK;
}

#--------------------------------------------------------------------
# Handle server WebSphere specific classpath
#--------------------------------------------------------------------

proc JVsetAppServerWebSphereClasspath {NodeName ServerName myParam1 myParam2} {
	global AdminConfig M_OK M_ERROR;

	JVputTrace ">>> JVsetAppServerWebSphereClasspath; Node=$NodeName Server=$ServerName Param=$myParam1";

#<systemProperties xmi:id="Property_11" name="ws.ext.dirs" value="${WPS_HOME}/shared/ext/collaborator.jar" description="Internal Portal component" required="false"/>
	set SysPropName "ws.ext.dirs";
	set SysPropValue $myParam1;
	set SysPropRequired "false";
	set SysPropDescription $myParam2;
	JVputInfo "Create/modify JVM systemProperties /Server:$ServerName/JavaProcessDef:/JavaVirtualMachine:/Property:$SysPropName/";
puts "stage A1";
	set ServerId [$AdminConfig getid /Server:$ServerName/]
    set JavaVirtualMachineId [$AdminConfig getid /Server:$ServerName/JavaProcessDef:/JavaVirtualMachine:/]
	if {$JavaVirtualMachineId == ""} {
		JVputError "ERROR: /Server:$ServerName/JavaProcessDef:/JavaVirtualMachine:/ does not exist"
		return $M_ERROR;
	}
	if {[llength $JavaVirtualMachineId] != 1} {
		JVputError "ERROR: more then one /Server:$ServerName/JavaProcessDef:/JavaVirtualMachine:/";
		return $M_ERROR;
	}
puts "stage A2";
	set FlagObjectExist "False";
	foreach TmpSysPropObjectId [$AdminConfig getid /Server:$ServerName/JavaProcessDef:/JavaVirtualMachine:/Property:/] {
		set TmpObjectName [$AdminConfig showAttribute $TmpSysPropObjectId name];
		if {[string compare $TmpObjectName $SysPropName] == 0} {
			set SysPropId $TmpSysPropObjectId;
			set FlagObjectExist "True";
			break;
		}
	}
puts "stage A3";
	################ modify / create Object #################################
	set FlagNoChangeNeccessary "false";
puts "stage A4";
	set attrs [list [list name $SysPropName] [list value $SysPropValue] [list required $SysPropRequired] [list description $SysPropDescription]];
puts "stage A5";
puts "FlagObjectExist $FlagObjectExist";
puts "stage A6";
	if {$FlagObjectExist == "True"} {
puts "stage B1";
		JVputInfo "Old: JVM SystemProperty {name [$AdminConfig showAttribute $SysPropId name]} {value [$AdminConfig showAttribute $SysPropId value]}";
		set TmpObjectValue [$AdminConfig showAttribute $TmpSysPropObjectId value];
		if {[string compare $TmpObjectValue $SysPropValue] != 0} {
			$AdminConfig modify $SysPropId $attrs;
		} else {
			JVputError "JVM SystemProperty Value is OK, no action taken";
			set FlagNoChangeNeccessary "true";
		}
	} else {
		JVputInfo "Old: SystemProperty {}";
puts "stage B2";
puts "JavaVirtualMachineId $JavaVirtualMachineId";
puts "stage B2a";
puts "attrs $attrs";
puts "stage B2b";

		if {[catch {$AdminConfig create Property $JavaVirtualMachineId $attrs} SysPropId]} {
			JVputError "Cannot create property; $SysPropId";
			return $M_ERROR;
		}
		if {$SysPropId == ""} {
			JVputError "ERROR: Cannot create property";
			return $M_ERROR;
		}
		puts "stage B3";
	}
	
	################ check for success  ####################################
	if {$FlagNoChangeNeccessary == "false"} {
		set FlagObjectExist "False";
		set SysPropId "";
		foreach TmpSysPropObjectId [$AdminConfig getid /Server:$ServerName/JavaProcessDef:/JavaVirtualMachine:/Property:/] {
			set TmpObjectName [$AdminConfig showAttribute $TmpSysPropObjectId name];
			if {[string compare $TmpObjectName $SysPropName] == 0} {
				set SysPropId $TmpSysPropObjectId;
				set FlagObjectExist "true";
				break;
			}
		}
		if {$FlagObjectExist == "true"} {
			puts stdout "New: JVM SystemProperty {name [$AdminConfig showAttribute $SysPropId name]} {value [$AdminConfig showAttribute $SysPropId value]}"
			set TmpObjectValue [$AdminConfig showAttribute $TmpSysPropObjectId value];
			if {[string compare $TmpObjectValue $SysPropValue] != 0} {
				JVputError "ERROR: JVM Property could not be modified.";
				return $M_ERROR;
			} else {
				JVputInfo "JVM Property successfully created/modified.";
				$AdminConfig save;
			}
		} else {
			JVputError "ERROR: JVM Property could not be created."	;
			return $M_ERROR;
		}
	}
	JVputTrace "<<< JVsetAppServerWebSphereClasspath";
	return $M_OK;
}

#--------------------------------------------------------------------
# Handle server JVM classpath
#--------------------------------------------------------------------

proc JVsetAppServerJVMClassPath {NodeName ServerName myParam} {
	global AdminConfig M_OK M_ERROR;

	JVputTrace ">>> JVsetAppServerJVMClassPath; Node=$NodeName Server=$ServerName Param=$myParam";

    #<classpath>${WPS_HOME}/shared/app/wmm</classpath>
#	set TmpVar "WPS_HOME"
#	append Classpath "$" "{" $TmpVar "}/shared/app/wmm"
	set Classpath $myParam;
	puts "Create/modify JVM classpath /Node:$NodeName/Server:$ServerName/JavaProcessDef:/JavaVirtualMachine:(Attribute classpath = $Classpath)";

	set ServerId [$AdminConfig getid /Node:$NodeName/Server:$ServerName/]
    set JavaVirtualMachineId [$AdminConfig getid /Node:$NodeName/Server:$ServerName/JavaProcessDef:/JavaVirtualMachine:/]
	if {$JavaVirtualMachineId == ""} {
		puts stdout "ERROR: /Node:$NodeName/Server:$ServerName/JavaProcessDef:/JavaVirtualMachine:/ does not exist"
		return $M_ERROR;
	}

	################ modify / create Attribute #######################################
	set FlagNoChangeNeccessary "false"
	set attrs [list [list classpath $Classpath]]
	puts stdout "Old: JVM Classpath {classpath [$AdminConfig showAttribute $JavaVirtualMachineId classpath]}"
	set TmpObjectValue [$AdminConfig showAttribute $JavaVirtualMachineId classpath]
    set PatternClasspath "*$Classpath*"
    if {[string match $PatternClasspath $TmpObjectValue] != 0} {
		puts stdout "JVM Classpath is OK, no action taken"
	} else {
        $AdminConfig modify $JavaVirtualMachineId $attrs 
        puts stdout "New: JVM Classpath {classpath [$AdminConfig showAttribute $JavaVirtualMachineId classpath]}"
        set TmpObjectValue [$AdminConfig showAttribute $JavaVirtualMachineId classpath]
        if {[string match $PatternClasspath $TmpObjectValue] != 0} {
            puts stdout "JVM Classpath succesfull created/modified."
            $AdminConfig save
		} else {
			puts stdout "ERROR: JVM Classpath could not be modified."	
			return $M_ERROR;
		}
	}
	JVputTrace "<<< JVsetAppServerJVMClassPath";
	return $M_OK;
}

#--------------------------------------------------------------------
# Handle Data Source
#--------------------------------------------------------------------
#	if {[catch {$AdminConfig getid /JDBCProvider:$JDBCProviderName/} ParentJDBCProviderId]} 
#	if {[catch {$AdminConfig getid /JDBCProvider:$JDBCProviderName/DataSource:$DataSourceName/} DataSourceId]} 

proc JVcreateDataSource {NodeName ServerName DataSourceName JDBCProviderName DbName DbType} {
	global AdminConfig M_OK M_ERROR;

	JVputTrace ">>> JVcreateDataSource; Node=$NodeName Server=$ServerName Param=$DataSourceName";
	append JndiName "jdbc/" $DataSourceName;

# set provider [$AdminConfig getid /Node:$nodeName/Server:$serverName/JDBCProvider:$providerName]


	if {[catch {$AdminConfig getid /JDBCProvider:$JDBCProviderName} ParentJDBCProviderId]} {
		JVputError "(1) Cannot get /JDBCProvider:$JDBCProviderName; $ParentJDBCProviderId";
		return $M_ERROR;
	}

#	if {[catch {$AdminConfig getid /Node:$NodeName/Server:$ServerName/JDBCProvider:$JDBCProviderName/} ParentJDBCProviderId]} {
#		JVputError "(2) Cannot get /JDBCProvider:$JDBCProviderName; $ParentJDBCProviderId";
#		return $M_ERROR;
#	}
	if {$ParentJDBCProviderId == ""} {
		JVputError "ERROR: /JDBCProvider:$JDBCProviderName is missing.";
	    return $M_ERROR;
	}
	puts "ParentJDBCProviderId $ParentJDBCProviderId";
#Create the data source
	puts "stage 1";
	if {[catch {$AdminConfig getid /Node:$NodeName/Server:$ServerName/JDBCProvider:$JDBCProviderName/DataSource:$DataSourceName/} DataSourceId]} {
		JVputInfo "New DataSource /JDBCProvider:$JDBCProviderName/DataSource:$DataSourceName/";
	} else {
		puts "stage 2";
		if {$DataSourceId != ""} {
			JVputError "/JDBCProvider:$JDBCProviderName/DataSource:$DataSourceName/ is already there. No action taken";
			return $M_OK;
		}
	}
puts "stage 3";
	set DataSourceAttrs01 [subst {{name $DataSourceName} {jndiName "$JndiName"} {description "JDBC DataSource for $DbName"}}];
puts "attrs01 $DataSourceAttrs01";
	set DataSourceId [$AdminConfig create DataSource $ParentJDBCProviderId $DataSourceAttrs01];
	JVputInfo "DataSource $DataSourceName for '$DbType' created: $DataSourceId";
puts "stage 4";
#Create the propertySet object
	set J2EEResourcePropertySetId [$AdminConfig create J2EEResourcePropertySet $DataSourceId {}];
	JVputInfo "J2EEResourcePropertySet created: $J2EEResourcePropertySetId";
puts "stage 5";
#Create the J2EEResourceProperty objects
	switch -exact -- $DbType {
	cloudscape {
        set attrs01 [subst {{name databaseName} {type java.lang.String} {value "$DbName"} {required "true"} {description "This is a required property. This property must be set and it identifies which database to access. For example, g:/db/wombat."}}]
        set attrs02 [subst {{name description} {type java.lang.String} {value ""} {required "false"} {description "Description of the Data Source. Not used by the Data Source object. Used for informational purpose only."}}]
        set attrs03 [subst {{name connectionAttributes} {type java.lang.String} {value ""} {required "false"} {description "Connection attributes specific to Cloudscape. Please see Cloudscape documentation for a complete list of features."}}]
        set attrs04 [subst {{name enableMultithreadedAccessDetection} {type java.lang.Boolean} {value "false"} {required "false"} {description "Indicates whether or not to detect multithreaded access to a Connection and its corresponding Statements, ResultSets, and MetaDatas."}}]
        set attrs05 [subst {{name remoteDataSourceProtocol} {type java.lang.String} {value ""} {required "false"} {description "If the database is remote and the Data Source accesses the database via client server, set this property to specify what client/server protocol to use. Currently, the only protocol supported is 'rmi'."}}]
        set attrs06 [subst {{name shutdownDatabase} {type java.lang.String} {value ""} {required "false"} {description "If set to the string 'shutdown', this will cause the database to shutdown when a java.sql.Connection object is obtained from the Data Source. E.g., If the Data Source is an XADataSource, a getXAConnection().getConnection() is necessary to cause the database to shutdown"}}]
        set attrs07 [subst {{name dataSourceName} {type java.lang.String} {value ""} {required "false"} {description "Name for ConnectionPooledDataSource or XADataSource. Not used by the data source object. Used for informational purpose only."}}]
        set attrs08 [subst {{name createDatabase} {type java.lang.String} {value ""} {required "false"} {description "If set to the string 'create', this will cause a new database of DatabaseName if that database does not already exist. The database is created when a connection object is obtained from the Data Source."}}]
        set NoOfJ2eeObjects 8
	}
	db2 {
        set attrs01 [subst {{name databaseName} {type java.lang.String} {value $DbName} {required "true"} {description "This is a required property. The database name. For example, enter sample to make your Data Source point to jdbc:db2:sample."}}]
        set attrs02 [subst {{name description} {type java.lang.String} {value ""} {required "false"} {description "The description of this datasource."}}]
        set attrs03 [subst {{name connectionAttribute} {type java.lang.String} {value cursorhold=0} {required "false"} {description "The connection attributes. Refer to the DB2 reference for the list of connection attributes."}}]
        set attrs04 [subst {{name enableMultithreadedAccessDetection} {type java.lang.Boolean} {value "false"} {required "false"} {description "Indicates whether or not to detect multithreaded access to a Connection and its corresponding Statements, ResultSets, and MetaDatas."}}]
        set attrs05 [subst {{name enableSQLJ} {type java.lang.Boolean} {value "false"} {required "false"} {description "This value is used to indicate whether SQLJ operations may be performed with this data source. If enabled, this data source can be used for both JDBC and SQLJ calls. Otherwise, only JDBC usage is permitted. This flag should always be set to false for DB2 v7.2, which does not support SQLJ."}}]
        set attrs06 [subst {{name loginTimeout} {type java.lang.Integer} {value "0"} {required "false"} {description "The maximum time to attempt to connect a database. If this value is non-zero, attempt to connect to the database will timeout when this specified value is reached."}}]
        set attrs07 [subst {{name portNumber} {type java.lang.Integer} {value ""} {required "false"} {description "The TCP/IP port number where the jdbc Provider resides."}}]
        set NoOfJ2eeObjects 7
	}
	oracle {
		if {$DatabaseUrl == "" } {puts stdout "ERROR: Database URL 'DbUrl' not specified in wpconfig.properties"; exit 1}
		if {$DbName == "" } {puts stdout "ERROR: Database Name 'WpsDbName'/'WmmDbName' not specified in wpconfig.properties"; exit 1}
        set attrs01 [subst {{name URL} {type java.lang.String} {value $DatabaseUrl} {required "true"} {description "This is a required property. The URL indicating the database from which the Data Source will obtain connections, such as 'jdbc:oracle:thin:@localhost:1521:sample'."}}]
        set attrs02 [subst {{name description} {type java.lang.String} {value ""} {required "false"} {description "The description of this datasource."}}]
        set attrs03 [subst {{name enableMultithreadedAccessDetection} {type java.lang.Boolean} {value "false"} {required "false"} {description "Indicates whether or not to detect multithreaded access to a Connection and its corresponding Statements, ResultSets, and MetaDatas."}}]
        set attrs04 [subst {{name driverType} {type java.lang.String} {value ""} {required "false"} {description "The type of the driver. The possible values are: thin, oci8."}}]
        set attrs05 [subst {{name dataSourceName} {type java.lang.String} {value ""} {required "false"} {description "The name of the Data Source."}}]
		set attrs06 [subst {{name oraclelogPrintMask} {type java.lang.Integer} {value ""} {required "false"} {description "The oraclelogPrintMask controls which information is printed with each trace message. Oracle9i requires the use of classes12_g.zip.  Default is 62 which is (OracleLog.FIELD_OBJECT for 9i / OracleLog.FIELD_CONN for 8i] 32 | OracleLog.FIELD_CATEGORY 16 | OracleLog.FIELD_SUBMOD 8 | OracleLog.FIELD_MODULE 4 | OracleLog.FIELD_TIME  2).  Possible values:  OracleLog.FIELD_TIME  2, OracleLog.FIELD_MODULE  4, OracleLog.FIELD_SUBMOD  8, OracleLog.FIELD_CATEGORY  16, OracleLog.FIELD_OBJECT  32, OracleLog.FIELD_THREAD  64"}}]
		set attrs07 [subst {{name oraclelogModuleMask} {type java.lang.Integer} {value ""} {required "false"} {description "The oraclelogModuleMask controls which modules write debug output. Oracle9i requires the use of classes12_g.zip.  Default is 1 which is ( OracleLog.MODULE_DRIVER  1).  Possible values (OracleLog.MODULE_DRIVER  1, OracleLog.MODULE_DBACCESS  2)"}}]
        set attrs08 [subst {{name oraclelogCategoryMask} {type java.lang.Integer} {value ""} {required "false"} {description "The oraclelogCategoryMask controls which category to be output. Oracle9i requires the use of classes12_g.zip.  Default is 47 which is ( OracleLog.USER_OPER  1 | OracleLog.PROG_ERROR  2 | OracleLog.ERROR  4 | OracleLog.WARNING  8 | OracleLog.DEBUG1  32).  Possible values (OracleLog.USER_OPER  1, OracleLog.PROG_ERROR  2, OracleLog.ERROR  4, OracleLog.WARNING  8, OracleLog.FUNCTION  16, OracleLog.DEBUG1  32, OracleLog.SQL_STR  128)"}}]
        set attrs09 [subst {{name TNSEntryName} {type java.lang.String} {value ""} {required "false"} {description "The entry name which is used for the Oracle OCI driver."}}]
        set attrs10 [subst {{name networkProtocol} {type java.lang.String} {value ""} {required "false"} {description "Whether to use TCP/IP or IPC or any other protocol"}}]
        set attrs11 [subst {{name databaseName} {type java.lang.String} {value $DbName} {required "false"} {description "The database name. For example, enter sample to make your Data Source point to sample"}}]
        set attrs12 [subst {{name serverName} {type java.lang.String} {value $ServerName} {required "false"} {description "The name of the server"}}]
        set attrs13 [subst {{name portNumber} {type java.lang.Integer} {value "0"} {required "false"} {description "The TCP/IP port number where the jdbc driver resides."}}]
        set attrs14 [subst {{name loginTimeout} {type java.lang.Integer} {value "0"} {required "false"} {description "The maximum time to attempt to connect a database. If this value is non-zero, attempt to connect to the database will timeout when this specified value is reached."}}]
        set attrs15 [subst {{name transactionBranchesLooselyCoupled} {type java.lang.Boolean} {value ""} {required "false"} {description "This property is introduced as a result of Oraclebug 2511780, Oracle Patch for 2511780 must be installed before setting this property to true, failure to do that would cause a program error.  Please check the WebSphere readme file for more info ."}}]
        set NoOfJ2eeObjects 15
	}
	informix {
		if {$DatabaseUrl == "" } {puts stdout "ERROR: Database URL 'DbUrl' not specified in wpconfig.properties"; exit 1}
		if {$DbName == "" } {puts stdout "ERROR: Database Name 'WpsDbName'/'WmmDbName' not specified in wpconfig.properties"; exit 1}
		set Remainder [string range $DatabaseUrl [expr [string first "//" $DatabaseUrl]+2] [expr [string last "/" $DatabaseUrl]-1]]
		set IfxHost [string range $Remainder 0 [expr [string first ":" $Remainder]-1]]
		set DbPort [string range $Remainder [expr [string first ":" $Remainder]+1] [string length $Remainder]]
		set DbServerName [string range $DatabaseUrl [expr [string first "=" $DatabaseUrl]+1] [string length $DatabaseUrl]]
        set attrs01 [subst {{name databaseName} {type java.lang.String} {value $DbName} {required "true"} {description "This is a required property. The database name. For example, enter sample to make your Data Source point to sample"}}]
        set attrs02 [subst {{name serverName} {type java.lang.String} {value $DbServerName} {required "true"} {description "This is a required property. The name of the Informix instance on the physical machine"}}]
        set attrs03 [subst {{name portNumber} {type java.lang.Integer} {value $DbPort} {required "true"} {description "This is a required property. The TCP/IP port number of the Informix instance"}}]
        set attrs04 [subst {{name ifxIFXHOST} {type java.lang.String} {value $IfxHost} {required "true"} {description "This is a required property. The physical machine name."}}]
        set attrs05 [subst {{name informixLockModeWait} {type java.lang.Integer} {value 2} {required "true"} {description "This is a required property.By default, Informix throws an exception when it cannot acquire a lock, rather than waiting for the current owner of the lock to release it. To modify this behavior, set this property to the number of seconds to wait for a lock. The default is 2 seconds. Any negative value means to wait forever"}}]
        set NoOfJ2eeObjects 5
	}
	sqlserver {
		set Remainder [string range $DatabaseUrl [expr [string first "//" $DatabaseUrl]+2] [expr [string first ";" $DatabaseUrl]-1]]
		set DbServerName [string range $Remainder 0 [expr [string first ":" $Remainder]-1]]
		set DbPort [string range $Remainder [expr [string first ":" $Remainder]+1] [string length $Remainder]]
        set attrs01 [subst {{name databaseName} {type java.lang.String} {value $DbName} {required "true"} {description "This is a required property. The database name. For example, enter sample to make your Data Source point to sample"}}]
        set attrs02 [subst {{name serverName} {type java.lang.String} {value $DbServerName} {required "true"} {description "This is a required property. The TCP/IP address of the SequeLink server in dotted format or host name format."}}]
        set attrs03 [subst {{name portNumber} {type java.lang.Integer} {value $DbPort} {required "true"} {description "This is a required property. The TCP/IP port number where MS SQL Server resides."}}]
        set attrs04 [subst {{name description} {type java.lang.String} {value ""} {required "false"} {description "The description of this datasource."}}]
        set attrs05 [subst {{name enable2Phase} {type java.lang.Boolean} {value "true"} {required "false"} {description "When true, two phase connections are used. When false, one phase connections are used. Do not change this value because this value is set for with this provider"}}]
        set attrs06 [subst {{name enableMultithreadedAccessDetection} {type java.lang.Boolean} {value "false"} {required "false"} {description "Indicates whether or not to detect multithreaded access to a Connection and its corresponding Statements, ResultSets, and MetaDatas."}}]
        set attrs07 [subst {{name selectMethod} {type java.lang.String} {value "cursor"} {required "false"} {description "Determine whether or not Microsoft SQL Server 'server cursors' are used for  SQL queries. Default value is cursor. Direct mode is more efficient, but it limits applications to a single active Statement while in a transaction. See the Microsoft driver documentation for more information."}}]
        set attrs08 [subst {{name dataSourceName} {type java.lang.String} {value ""} {required "false"} {description "The name of the Data Source."}}]
        set attrs09 [subst {{name spyAttributes} {type java.lang.String} {value ""} {required "false"} {description "The SPY attributes. See the ConnectJDBC documentation for a list of attributes."}}]
        set attrs10 [subst {{name loginTimeout} {type java.lang.Integer} {value ""} {required "false"} {description "The maximum time to attempt to connect a database. If this value is non-zero, attempt to connect to the database will timeout when this specified value is reached."}}]
        set NoOfJ2eeObjects 10
	}
	default {
		puts stdout "ERROR: DataBase Format '$DbType' is not supported"
		exit 1
	}
}
for {set i 1} {$i <= $NoOfJ2eeObjects} {incr i} {
    set VarAttrs ""
    if {$i < 10} {append VarAttrs $ "attrs0" $i} else {append VarAttrs $ "attrs" $i}
	set J2EEResourcePropertyId [$AdminConfig create J2EEResourceProperty $J2EEResourcePropertySetId [subst $VarAttrs]]
	#puts "J2EEResourceProperty for '$DbType' created: [$AdminConfig showAttribute $J2EEResourcePropertyId name]"
	puts "$DbType J2EEResourceProperty created: [$AdminConfig showAttribute $J2EEResourcePropertyId name] : [$AdminConfig showAttribute $J2EEResourcePropertyId value]"
}

#Finding the Resource Adapter
set ParentServerId [$AdminConfig getid /Server:$ServerName/]
set J2CResourceAdapterId [$AdminConfig list J2CResourceAdapter $ParentServerId]

#Modify the properties for the data source.
switch -exact -- $DbType {
	oracle {
		if {$DbContext == "wmm"} {
			#Change authDataAlias from $JaasAuthDataAlias to authDataAlias ""; Input from Andy Zhuang/Toronto/IBM 28.04.2003
			set DataSourceAttrs02 [subst {{authMechanismPreference "BASIC_PASSWORD"} {statementCacheSize 10} {datasourceHelperClassname $DatasourceHelperClassname} {relationalResourceAdapter $J2CResourceAdapterId}}]
		} else {
			set DataSourceAttrs02 [subst {{authMechanismPreference "BASIC_PASSWORD"} {authDataAlias $JaasAuthDataAlias} {statementCacheSize 10} {datasourceHelperClassname $DatasourceHelperClassname} {relationalResourceAdapter $J2CResourceAdapterId}}]
		}
	}                                                                                                                                        
	default {
		set DataSourceAttrs02 [subst {{authMechanismPreference "BASIC_PASSWORD"} {authDataAlias $JaasAuthDataAlias} {statementCacheSize 10} {datasourceHelperClassname $DatasourceHelperClassname} {relationalResourceAdapter $J2CResourceAdapterId}}]
	}
}
$AdminConfig modify $DataSourceId $DataSourceAttrs02
puts "DataSource modified: $DataSourceId"

#Create the connection pool object...
set ConnectionPoolId [$AdminConfig create ConnectionPool $DataSourceId {{connectionTimeout 1800} {maxConnections 10} {minConnections 1} {reapTime 180} {unusedTimeout 1800} {agedTimeout 0} {purgePolicy "EntirePool"}}]
puts "ConnectionPool created: $ConnectionPoolId"



#Create the mapping object... 
#2003/05/16 START delete
#switch -exact -- $DbType {
#	oracle {
#		if {$DbContext == "wmm"} {
#			#Change authDataAlias from "" to authDataAlias $JaasAuthDataAlias; Input from Andy Zhuang/Toronto/IBM 28.04.2003
#			set MappingModuleAttrs [subst {{mappingConfigAlias "DefaultPrincipalMapping"} {authDataAlias $JaasAuthDataAlias}}]
#		} else {
#			set MappingModuleAttrs [subst {{mappingConfigAlias "DefaultPrincipalMapping"} {authDataAlias ""}}]
#		}
#	}                                                                                                                                        
#	default {
#		set MappingModuleAttrs [subst {{mappingConfigAlias "DefaultPrincipalMapping"} {authDataAlias ""}}]
#	}
#}
#2003/05/16 END delete

#2003/05/16 START add
if {$DbContext == "wmm"} {
	set MappingModuleAttrs [subst {{mappingConfigAlias "DefaultPrincipalMapping"} {authDataAlias $JaasAuthDataAlias}}]
} else {
	set MappingModuleAttrs [subst {{mappingConfigAlias "DefaultPrincipalMapping"} {authDataAlias ""}}]
}
#2003/05/16 END add

set MappingModuleId [$AdminConfig create MappingModule $DataSourceId $MappingModuleAttrs]
puts "MappingModule for '$DbType' created: $MappingModuleId"




set FlagExist "False"
foreach TmpDataSource [$AdminConfig list DataSource] {
	set TmpDataSourceName [$AdminConfig showAttribute $TmpDataSource name]
	if {[string compare $TmpDataSourceName $DataSourceName] == 0} {
		set FlagExist "True"
        break;
	}
}
if {$FlagExist == "True"} {
	puts stdout "DataSource $DataSourceName for '$DbType' and all required attributes successfully created."
    $AdminConfig save
} else {
	puts stdout "ERROR: DataSource $DataSourceName for '$DbType' could not be created."
	exit 1
}



	JVputTrace "<<< JVcreateDataSource";
	return $M_OK;
}
