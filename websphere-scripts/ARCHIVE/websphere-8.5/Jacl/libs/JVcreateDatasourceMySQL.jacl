
proc JVcreateDatasourceMySQL {NodeName ServerName providerName dsName dsJNDI dsDesc dsAuthMech authAlias dbName dbSrvName dbPort dbUser dbPassword dbHelper} {

   global AdminConfig;

#--------------------------------------------------------------------
# Create DataSource
#--------------------------------------------------------------------

   if {$dsDesc == ""} {set dsDesc $dsJNDI;}
   if {$dsName == ""} {set dsName $dsJNDI;}
   set aliasName $dsName;
   regsub -all "/" $aliasName "_" dsName;

   puts "";
   puts "---------------------------------------------------------------";
   puts "              Create data source                               ";
   puts "---------------------------------------------------------------";
   puts " Scope:                                                        ";
   puts "    node                $NodeName           ";
   puts "    server              $ServerName         ";
   puts " JDBC provider:                             ";
   puts "    name                $providerName       ";
   puts " Datasource:                                ";
   puts "    name                $dsName             ";
   puts "    JNDI                $dsJNDI             ";
   puts "    description         $dsDesc             ";
   puts "    dsAuthMech          $dsAuthMech         ";
   puts "    auth alias          $authAlias          ";
   puts " Database:                                  ";
   puts "    Name                $dbName             ";
   puts "    Server              $dbSrvName          ";
   puts "    Port                $dbPort             ";
   puts "    User                $dbUser             ";
   puts "    Password            $dbPassword         ";
   puts "    HelperClass         $dbHelper           ";
   puts "---------------------------------------------------------------";
   puts "";

#--------------------------------------------------------------------
# Check if data source already exists 
#--------------------------------------------------------------------

   set ds [$AdminConfig getid /Node:$NodeName/Server:$ServerName/JDBCProvider:$providerName/DataSource:$dsName]
#   JVputTrace "***** ds $ds";
   if {[llength $ds] != 0} {
      JVputInfo "The $dsName data source already exists.";
      return;
   }

#--------------------------------------------------------------------
# Get the config id for the provider 
#--------------------------------------------------------------------
  
   JVputTrace "Get the ID for the $providerName provider.";
   set providerID [$AdminConfig getid /Node:$NodeName/Server:$ServerName/JDBCProvider:$providerName];
#   JVputTrace "***** providerID $providerID";
   if {[llength $providerID] == 0} {
      JVthrow "The ID for the /Node:$NodeName/Server:$ServerName/JDBCProvider:$providerName could not be found.";
   }

#--------------------------------------------------------------------
#	Create the attributes
#--------------------------------------------------------------------

   set name_attr       [list name $dsName];
   set desc_attr       [list description $dsDesc];
   set jndiName_attr     [list jndiName $dsJNDI];
   set authMechPref_attr [list authMechanismPreference $dsAuthMech];
   set xaRecoveryAuthAlias_attr [list xaRecoveryAuthAlias ""];
   set dbHelper_attr [list datasourceHelperClassname $dbHelper];
#   JVputTrace "***** name_attr $name_attr";
#   JVputTrace "***** jndiName_attr $jndiName_attr";
#   JVputTrace "***** desc_attr $desc_attr";
#   JVputTrace "***** authMechPref_attr $authMechPref_attr";
#   JVputTrace "***** xaRecoveryAuthAlias_attr $xaRecoveryAuthAlias_attr";
#   JVputTrace "***** dbHelper_attr $dbHelper_attr";

#--------------------------------------------------------------------
#	Check if mapping needed
#--------------------------------------------------------------------

   if { !($authAlias == "N_O_N_E") } {
      set map_auth_attr   [list authDataAlias $authAlias];
      set map_configalias_attr [list mappingConfigAlias ""];
      set map_attrs       [list $map_auth_attr $map_configalias_attr];
      set mapping_attr    [list mapping $map_attrs];
      set attrs           [list $name_attr $jndiName_attr $xaRecoveryAuthAlias_attr $dbHelper_attr $desc_attr $authMechPref_attr $map_auth_attr $mapping_attr];
   } else {
      set attrs           [list $name_attr $jndiName_attr $desc_attr $authMechPref_attr];
   }

#--------------------------------------------------------------------
#	Create the data source
#--------------------------------------------------------------------

   JVputTrace "Creating the data source";
   set ds [$AdminConfig create DataSource $providerID $attrs];

#--------------------------------------------------------------------
#	Create the custom properties
#--------------------------------------------------------------------

	JVputTrace "Creating the custom properties of the data source";
	set ds_props [$AdminConfig create J2EEResourcePropertySet $ds []];
#	JVputTrace "ds_props $ds_props";

	set props_01  [list [list name databaseName] [list value $dbName] [list type java.lang.String]];
	set props_02  [list [list name port] [list value $dbPort] [list type java.lang.String]];
	set props_03  [list [list name password] [list value $dbPassword] [list type java.lang.String]];
	set props_04  [list [list name serverName] [list value $dbSrvName] [list type java.lang.String]];
	set props_05  [list [list name user] [list value $dbUser] [list type java.lang.String]];
	
	$AdminConfig create J2EEResourceProperty $ds_props $props_01;
	$AdminConfig create J2EEResourceProperty $ds_props $props_02;
	$AdminConfig create J2EEResourceProperty $ds_props $props_03;
	$AdminConfig create J2EEResourceProperty $ds_props $props_04;
	$AdminConfig create J2EEResourceProperty $ds_props $props_05;

#--------------------------------------------------------------------
#	Done
#--------------------------------------------------------------------

}
